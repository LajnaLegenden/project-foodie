@using Newtonsoft.Json;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using System.Collections.Generic;
@inject CartService CartService

<div class="header">
    <div class="logo">
        <h1>LOGO</h1>
    </div>
    <div class="navbar">
        <nav class="nav">
            <div class="nav-item">
                <NavLink class="nav-link" href="/">
                    <span>Start</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="order">
                    <span class="nav-link-text">Beställ</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="how">
                    <span>Vanliga frågor</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="me">
                    <span>Min sida</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="/order?page=14">
                    <button class="nav-kassan">
                        <span>Icon</span>
                        Varukorg <span class="nav-kassan-counter">@cartCount</span>
                    </button>
                </NavLink>
            </div>
        </nav>
    </div>
</div>

@code {

    // Variable to hold the cart count
    private int itemsCountInKassan;
    private int cartCount;

    // OnInitializedAsync is called when the component is first rendered
    protected async override void OnInitialized()
    {
        cartCount = await CartService.GetObjectCount();
        CartService.SetCartCount(cartCount);
        CartService.CartCountChanged += HandleCartCountChanged;
    }

    // Handle the event when the cart count changes
    private void HandleCartCountChanged(object sender, EventArgs e)
    {
        cartCount = CartService.GetCartCount();
        StateHasChanged();
    }
    // OnAfterRenderAsync is called after the component has been rendered
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            itemsCountInKassan = await CartService.GetObjectCount();
            StateHasChanged();
        }
    }
}