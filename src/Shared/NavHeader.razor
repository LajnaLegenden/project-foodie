@using Newtonsoft.Json;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using System.Collections.Generic;
@using project_foodie.Model;
@inject IJSRuntime JSRuntime

<div class="header">
    <div class="logo">
        <h1>LOGO</h1>
    </div>
    <div class="navbar">
        <nav class="nav">
            <div class="nav-item">
                <NavLink class="nav-link" href="/">
                    <span>Start</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="order">
                    <span class="nav-link-text">Beställ</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="how">
                    <span>Vanliga frågor</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="me">
                    <span>Min sida</span>
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="#">
                    <button class="nav-kassan">
                        <span>Icon</span>
                        Varukorg <span class="nav-kassan-counter">@count</span>
                    </button>
                </NavLink>
            </div>
        </nav>
    </div>
</div>

@code {
    int count;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            int localStorageCount = await JSRuntime.InvokeAsync<int>("getLocalStorageCount");
            count = localStorageCount;
        }

    }

    private async ValueTask<int> GetLocalStorageCount()
    {
        int localStorageCount = await JSRuntime.InvokeAsync<int>("getLocalStorageCount");
        return localStorageCount;
    }

    [JSInvokable]
    public async Task UpdateLocalStorageCount()
    {
        count = await GetLocalStorageCount();
        StateHasChanged();
    }

}