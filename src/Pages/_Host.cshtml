@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace project_foodie.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="project-foodie.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script type="text/javascript">
                state='desktop'
        window.blazorOnLoad = function(dotNetHelper) {
                window.addEventListener('resize', () => {
                    if(window.innerWidth < 768){
                        if(state != 'mobile'){
                            state = 'mobile';
                            dotNetHelper.invokeMethodAsync('setViewPort', 'mobile');
                        }
                        return 'mobile';
                    } else if(window.innerWidth < 1024){
                        if(state != 'tablet'){
                            dotNetHelper.invokeMethodAsync('setViewPort', 'tablet');
                            state = 'tablet';
                        }
                        return 'tablet';
                    } else {
                        if(state != 'desktop'){
                            dotNetHelper.invokeMethodAsync('setViewPort', 'desktop');
                            state = 'desktop';
                        }
                        return 'desktop';
                    }
                });
                if(window.innerWidth < 768){
                        if(state != 'mobile'){
                            state = 'mobile';
                            dotNetHelper.invokeMethodAsync('setViewPort', 'mobile');
                        }
                        return 'mobile';
                    } else if(window.innerWidth < 1024){
                        if(state != 'tablet'){
                            dotNetHelper.invokeMethodAsync('setViewPort', 'tablet');
                            state = 'tablet';
                        }
                        return 'tablet';
                    } else {
                        if(state != 'desktop'){
                            dotNetHelper.invokeMethodAsync('setViewPort', 'desktop');
                            state = 'desktop';
                        }
                        return 'desktop';
                    }
        };
        function scrollToTop() {
            setTimeout(function() {
                window.scrollTo({
                top: 0,
                behavior: "smooth"
                });
            }, 350);
        }
    </script>
    <script src="_framework/blazor.server.js"></script>
</body>
</html>
