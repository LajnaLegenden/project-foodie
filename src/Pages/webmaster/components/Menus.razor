@using project_foodie.Model
@using project_foodie.Repository
@namespace project_foodie.Pages.Webmaster
<div>
    @if (_allMenus != null)
    {
        <table>
            <caption>
                All menus
            </caption>
            <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Name</th>
                <th scope="col">Last order date</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
                <th scope="col">Day menus</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var menu in _allMenus.Select((value, i) => new { i, value }))
            {
                <tr @onclick="() => setMenuId(menu.i)">
                    <th scope="row">@menu.value.Id</th>
                    <td>@menu.value.Name</td>
                    <td>@menu.value.lastOrderDate</td>
                    <td>@menu.value.startDate</td>
                    <td>@menu.value.endDate</td>
                    <td>@countTotalDishes(menu.value)</td>
                </tr>
            }
            </tbody>
            <tfoot>
            <tr>
                <th scope="row" colspan="2">Total menus</th>
                <td colspan="2">@_allMenus.Count</td>
            </tr>
            </tfoot>
        </table>
        <div class="dishes" style="display: flex;">
            @if (selectedMenuId >= 0)
            {
                @foreach (var dayMenu in _allMenus[selectedMenuId].dayMenus)
                {
                    <div style="border: 1px solid">
                        <p>@dayMenu.date</p>
                        <p>@dayMenu.type</p>
                        <ul>
                            @foreach (var dish in dayMenu.dishes)
                            {
                                <li>@dish.Name</li>
                            }
                        </ul>
                    </div>
                }
            }
        </div>
    }
</div>

@code {

    private List<Menu> _allMenus;
    private int selectedMenuId = -1;

    protected override async Task OnInitializedAsync()
    {
        using (var context = new DatabaseContext())
        {
            var repository = new RepositoryWrapper(context);
            _allMenus = await repository.Menu.GetAllAsync();
        }
    }

    void setMenuId(int id)
    {
        selectedMenuId = id;
    }

    int countTotalDishes(Menu menu)
    {
        var totalDishes = 0;
        if (menu.dayMenus == null)
        {
            return 0;
        }
        @*  print each day menu serializing it to json *@

        foreach (var dayMenu in menu.dayMenus)
        {
    //     Console.WriteLine(JsonConvert.SerializeObject(dayMenu));
        }


        foreach (var dayMenu in menu.dayMenus)
        {
            totalDishes += dayMenu.dishes.Count;
        }
        return totalDishes;
    }

}