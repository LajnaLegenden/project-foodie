@page "/me/order_history"
@using project_foodie.Pages.my_page.components
@using project_foodie.Model;
@using project_foodie.Repository;
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.WebUtilities

<h1 class="order-history-title">Mina best√§llningar</h1>
<div class="order-history-container">
    @foreach (var order in orders)
    {
        <OrderTable orderData="@order"/>
    }
     @for(int i = 1; i <= totalItems / pageSize; i++){
        <a href="/me/order_history?page=@i">@i</a>
     }

</div>

@code {
    List<Order> orders = new List<Order>();

    private int pageNumber = 1;
    private int pageSize = 2;
    private int totalItems = 0;

    protected override async Task OnInitializedAsync()
    {
        using (var db = new DatabaseContext()) 
        {
            RepositoryWrapper repository = new RepositoryWrapper(db);
            totalItems = repository.Order.GetNumberOfOrders();
            orders = repository.Order.GetPage(pageNumber, pageSize);
        }
    }

        protected override void OnInitialized()
    {
        NavManager.LocationChanged += HandleLocationChanged;
        ReadQueryParams();
       
            }

    private void HandleLocationChanged(object sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e) {
        ReadQueryParams();
        InvokeAsync(StateHasChanged);
    }

    private void ReadQueryParams(){
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("page", out var _page))
        {
         pageNumber = Convert.ToInt32(_page);
          using (var db = new DatabaseContext()) 
        {
         RepositoryWrapper repository = new RepositoryWrapper(db);
         orders = repository.Order.GetPage(pageNumber, pageSize);
         }
        }
    }
}