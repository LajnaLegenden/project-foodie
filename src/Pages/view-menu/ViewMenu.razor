@page "/order"
@using project_foodie.Data
@using project_foodie.Model
@using project_foodie.Pages.view_menu.components
@inject NavigationManager UriHelper
@using project_foodie.Model;
@using Newtonsoft.Json;
@using System.Globalization;

<div class="information">
    <h1 class="text-week">@_menu.Name</h1>
    <h1 class="text-day">Måndag 11/3</h1>
</div>
<div class="radio-group">
    <input type="radio" id="radio-1" name="group" @onclick="() => toggleClass(1)" />
    <label for="radio-1">Kött</label>

    <input type="radio" id="radio-2" name="group" @onclick="() => toggleClass(2)"/>
    <label for="radio-2">Fläsk</label>

    <input type="radio" id="radio-3" name="group" @onclick="() => toggleClass(3)"/>
    <label for="radio-3">Kyckling</label>

    <input type="radio" id="radio-4" name="group" @onclick="() => toggleClass(4)"/>
    <label for="radio-4">Vegetariskt</label>

    <input type="radio" id="radio-5" name="group" @onclick="() => toggleClass(5)"/>
    <label for="radio-5">Visa Alla</label>
</div>
<div class="menu-container">
    <MenuContainer menuData=@_menu />
    <div class="button-container">
        <button @onclick="DecrementCount" class="button-back">Föregående dag</button>
        <button @onclick="IncrementCount" class="button-forward">Nästa dag</button>
    </div>
</div>

@code{
    private int count = 1;
    void Navigate()
    {
        if(count == 1) {
            UriHelper.NavigateTo("order");
        }
    }

    private void IncrementCount()
    {
        count++;
        Console.WriteLine(count);
    }

    private void DecrementCount()
    {
        count--;
        Console.WriteLine(count);
    }
    
    string category = "all";

    void toggleClass(int type) {
        if (type == 1) {
            category = "kött";
        } else if(type == 2) {
            category = "fläsk";
        } else if(type == 3) {
            category = "kyckling";
        } else if(type == 4) {
            category = "vegetariskt";
        } else {
            category = "all";
        };
    }
    private List<Menu> _allMenus ;
    private Menu _menu ;
    
    protected override void OnInitialized()
    {
        this._allMenus = Menu.GetAll();
        foreach(var menu in _allMenus) {
            string menuLastOrderDate = menu.lastOrderDate.ToShortDateString();
            DateTime dateTimeLastOrder = DateTime.ParseExact(menuLastOrderDate, "MM/dd/yyyy", CultureInfo.InvariantCulture);
            DateTime dateTimeToday = DateTime.ParseExact(@DateTime.Today.ToShortDateString(), "MM/dd/yyyy", CultureInfo.InvariantCulture);
            if(dateTimeLastOrder > dateTimeToday) {
                this._menu = menu;
                break;
            }
        }
    }
}