@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;

<div class="overview-container">
<h1>Översikt över dina val</h1>
<p>Beställningsdag: 2023-01-23</p>
<p>Leverans: 2023-02-01</p>

<table class="overview-table">
  <tr>
    <th>Veckodag</th>
    <th>Lunch</th>
    <th>Lunch pris</th>
    <th>Middag</th>
    <th>Middag pris</th>
    <th>Totalt</th>
    <th></th>
  </tr>
  @for (int i=0; i<2; i++) {
    <tr>
    <td data-label="Veckodag">Måndag</td>
    <td data-label="Lunch">
    <ul>
        <li>
            Klassisk Lasagne &nbsp;&nbsp;<b>x1</b>
        </li>
        <li>
            Skinkstek med matvete &nbsp;&nbsp;<b>x1</b>
        </li>
    </ul>
    </td>
    <td data-label="Pris">100kr</td>
    <td data-label="Middag">
    <ul>
        <li>
            Köttbullar med potatis &nbsp;&nbsp;<b>x1</b>
        </li>
        <li>
            Skaldjur med pasta &nbsp;&nbsp;<b>x2</b>
        </li>
    </ul>
    </td>
    <td data-label="Pris">160kr</td>
    <td data-label="Totalt">260kr</td>
    <td><button class="change-dish-button">Ändra val</button></td>
  </tr>
  }
  <h2 class="total-all-price">Total: 460kr</h2>
</table>
</div>
@* <p>@dishName</p>
<p>@count</p>
<p>@id</p>
<p>@dishDescription</p> *@


@code {
    private string jsonString;
    private string dishName;
    private int count;
    private int id;
    private string dishDescription;

    protected override async Task OnInitializedAsync()
    {
        await GetData();
    }
    private async Task GetData()
    {
        var localStorageCount = await localStorage.GetItemAsync<string>("LocalDataDishes");
        //parse localStorageCount into json format
        jsonString = JsonConvert.SerializeObject(localStorageCount);

        // Retrieve the values
        JObject json = JObject.Parse(localStorageCount);
        dishName = (string)json["dishname"];
        count = (int)json["Count"];
        id = (int)json["ID"];
        dishDescription = (string)json["dishdiscription"];
    }



}