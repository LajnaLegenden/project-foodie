@using project_foodie.Pages.view_menu.components;
@using project_foodie.Model;
@using Newtonsoft.Json;
@inject Blazored.LocalStorage.ILocalStorageService localStorage



<div class="food-card">
    <div class="food-card-img-container">

    </div>
    <div class="food-card-body">
        <div class="food-card-upper-body">
            <div class="food-card-food-container">
                <p class="food-card-text">@dishData.Name</p>
                <p class="food-card-text-extra">@dishData.description</p>
            </div>
            <div class="food-card-price-container">
                <p class="food-card-price">@dishData.Price:-</p>
            </div>
        </div>
        <div class="allergener">
            <li>Stark</li>
            <li>Gluttenfritt</li>
            <li>Mjölkfri</li>
        </div>
        <div class="food-card-btn-container">
            @if (showInput)
{
            <div class="btn-add-container">
                <button class="food-card-btn-decrement" @onclick="((e) => modifyCount(-1))"> - </button>
                <input type="text" class="text-add-placeholder" count="@count" placeholder="@count st" readonly="readonly" />
                <button class="food-card-btn-increment" @onclick="((e) => modifyCount(1))">+</button>
            </div>
} else {
     <button class="@ButtonClass food-card-btn" type="submit" @onclick="((e) => modifyCount(1))">Välj</button>
}


        </div>
    </div>
</div>

@code {
    [Parameter]
    public Dish dishData { get; set; }
    private int count = 0;
    private bool showInput = false;
    private string ButtonClass => count <= 0 ? "food-card-btn food-card-btn-add-amount" : "food-card-btn food-card-btn-add";

    private string jsonString;

    public static int MAX_DISHES = 20;

    public class DishInformation
    {
        public int Count { get; set; }
        public int ID { get; set; }
        public string dishname { get; set; }
        public string dishdiscription { get; set; }
        public int menuID { get; set; }
        public string day { get; set; }
    }

    private async void modifyCount(int value){
        count += value;
        //enforce max dishes and min dishes
        if (count > 20){
            count = 20;
        } else if(count < 0){
            count = 0;
        }
        DishInformation dishInfo = new DishInformation
            {
                ID = @dishData.Id,
                Count = count,
                dishname = dishData.Name,
                dishdiscription = dishData.description
            };
        string json = JsonConvert.SerializeObject(dishInfo);
        await localStorage.SetItemAsync("LocalDataDishes", json);

        //handle showInput
        if(count > 0){
            showInput = true;
        } else {
            showInput = false;
        }
        await InvokeAsync(StateHasChanged);
    }

    private async Task GetData()
    {
        var localStorageCount = await localStorage.GetItemAsync<string>("LocalDataDishes");
        var localStorageCountJson = JsonConvert.DeserializeObject(localStorageCount);
        //parse localStorageCount into json format
        jsonString = JsonConvert.SerializeObject(localStorageCountJson);
    }

   
}



